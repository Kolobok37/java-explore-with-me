create sequence IF NOT EXISTS hibernate_sequence start with 1 increment by 1;
create TABLE IF NOT EXISTS categories (
id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
name VARCHAR(255) NOT NULL UNIQUE,
CONSTRAINT pk_categories PRIMARY KEY (id)
);

create TABLE IF NOT EXISTS users(
id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
name VARCHAR(250) NOT NULL,
email VARCHAR(127) NOT NULL UNIQUE,
CONSTRAINT pk_users PRIMARY KEY (id)
);

create TABLE IF NOT EXISTS requests(
id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
user_id integer NOT NULL,
event_id integer NOT NULL,
created timestamptz NOT NULL,
status_request VARCHAR(123) NOT NULL,
CONSTRAINT pk_requests PRIMARY KEY (id)
);

create TABLE IF NOT EXISTS events(
id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
title VARCHAR(123)  NOT NULL,
annotation VARCHAR(2047) NOT NULL,
description VARCHAR(8000) NOT NULL,
paid BOOLEAN,
request_moderation BOOLEAN,
event_date timestamptz NOT NULL,
created_on timestamptz NOT NULL,
category_id integer NOT NULL,
initiator_id integer NOT NULL,
location_id integer NOT NULL,
participant_limit integer,
state_event VARCHAR(63),
CONSTRAINT pk_event PRIMARY KEY (id)
);

create TABLE IF NOT EXISTS location(
id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
lat double precision NOT NULL,
lon double precision  NOT NULL,
CONSTRAINT pk_location PRIMARY KEY (id)
);

create TABLE IF NOT EXISTS compilations (
id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
title VARCHAR(123)  NOT NULL,
pinned BOOLEAN,
CONSTRAINT pk_compilations PRIMARY KEY (id)
);

create TABLE IF NOT EXISTS events_compilations (
compilation_id integer,
event_id integer,
CONSTRAINT pk_events_compilations PRIMARY KEY (compilation_id,event_id)
);

